@model Video_Rental_Shop.ViewModels.NewRentalViewModel

@{
    ViewBag.Title = "New Rental";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    bool IsMoviesAreNotAvailable = Model.Movies.All(m => m.NumberAvailable <= 0);
    bool IsGamesAreNotAvailable = Model.Games.All(g => g.NumberAvailable <= 0);
}

<div class="main-content-container">
    <div class="row">
        <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
            <div class="row">
                @if (Model.Movies.Any() && !IsMoviesAreNotAvailable)
                {
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                        <a id="js-moviesButton" class="add-new-entity-button">
                            <img src='@Url.Content("~/Content/Custom/Shared/img/camera.png")' />
                            <span class="tooltip-text">Show movies</span>
                        </a>
                    </div>
                }
                @if (Model.Games.Any() && !IsGamesAreNotAvailable)
                {
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                        <a id="js-gamesButton" class="add-new-entity-button">
                            <img src='@Url.Content("~/Content/Custom/Shared/img/gamepad.png")' />
                            <span class="tooltip-text">Show games</span>
                        </a>
                    </div>
                }
            </div>
        </div>

        <div class="col-xs-8 col-sm-8 col-md-8">
            @if (!Model.Movies.Any() && !Model.Games.Any())
            {
                <h2 class="table-title">We don't have any products yet.</h2>
            }
            else if (Model.Movies.Any() && !IsMoviesAreNotAvailable || Model.Games.Any() && !IsGamesAreNotAvailable)
            {
                <h2 class="table-title">New Rental for @Model.Customer.Name @Model.Customer.Surname</h2>
            }
            else
            {
                <h2 class="table-title">No products currently available</h2>
            }
        </div>
    </div>

    @if (Model.Movies.Any() && !IsMoviesAreNotAvailable)
    {
        <div class="table-container">
            <table id="movies" class="table table-bordered table-hover">
                <thead>
                    <tr style="display:none">
                        <th></th>
                    </tr>
                    <tr>
                        <th colspan="2" class="text-center" style="width:5%">Options</th>
                        <th class="text-center" style="width:5%">#</th>
                        <th>Movie</th>
                        <th>Genre</th>
                        <th>Release Date</th>
                        <th>Number Available</th>
                    </tr>
                </thead>
                <tbody>

                    @{
                        int counter = 1;
                    }

                    @for (int i = 0; i < Model.Movies.Count(); i++)
                    {
                        if (Model.Movies.ElementAt(i).NumberAvailable > 0)
                        {
                            <tr>
                                <td><button data-customer-id="@Model.Customer.Id" data-movie-price="@Model.Movies.ElementAt(i).Price" data-movie-id="@Model.Movies.ElementAt(i).Id" data-discount-rate="@Model.Customer.Membership.MembershipType.DiscountRate" data-product-type="Movie" class="btn btn-success btn-xs js-rent-product">Rent movie</button></td>
                                <td>@Html.ActionLink("Details", "Details", "Movies", new { id = Model.Movies.ElementAt(i).Id }, new { @class = "btn btn-info btn-xs" })</td>
                                <td class="text-center">@(counter++)</td>
                                <td>@Model.Movies.ElementAt(i).Name</td>
                                <td>@Model.Movies.ElementAt(i).MovieGenre.Name</td>
                                <td>@Model.Movies.ElementAt(i).ReleaseDate.Value.ToShortDateString()</td>
                                <td>@Model.Movies.ElementAt(i).NumberAvailable</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    }

    @if (Model.Games.Any() && !IsGamesAreNotAvailable)
    {
        <table id="games" class="table table-bordered table-hover">
            <thead>
                <tr style="display:none">
                    <th></th>
                </tr>
                <tr>
                    <th colspan="2" class="text-center" style="width:5%">Options</th>
                    <th class="text-center" style="width:5%">#</th>
                    <th>Game</th>
                    <th>Genre</th>
                    <th>Platform</th>
                    <th>Release Date</th>
                    <th>Number Available</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int counter = 1;
                }

                @for (int i = 0; i < Model.Games.Count(); i++)
                {
                    if (Model.Games.ElementAt(i).NumberAvailable > 0)
                    {
                        <tr>
                            <td><button data-customer-id="@Model.Customer.Id" data-game-price="@Model.Games.ElementAt(i).Price" data-game-id="@Model.Games.ElementAt(i).Id" data-discount-rate="@Model.Customer.Membership.MembershipType.DiscountRate" data-product-type="Game" class="btn btn-success btn-xs js-rent-product">Rent game</button></td>
                            <td>@Html.ActionLink("Details", "Details", "Games", new { id = Model.Games.ElementAt(i).Id }, new { @class = "btn btn-info btn-xs" })</td>
                            <td class="text-center">@(counter++)</td>
                            <td>@Model.Games.ElementAt(i).Name</td>
                            <td>@Model.Games.ElementAt(i).GameGenre.Name</td>
                            <td>@Model.Games.ElementAt(i).GamePlatform.Name</td>
                            <td>@Model.Games.ElementAt(i).ReleaseDate.Value.ToShortDateString()</td>
                            <td>@Model.Games.ElementAt(i).NumberAvailable</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
</div>

@section scripts
{
    <script>
        $(document).ready(function () {

            $("#movies").DataTable();
            $("#games").dataTable();

            $("#js-moviesButton").click(function () {
                $("#movies").show();
                $("#games").hide();
                $("#movies_wrapper").show();
                $("#games_wrapper").hide();
            });

            $("#js-gamesButton").click(function () {
                $("#games").show();
                $("#movies").hide();
                $("#games_wrapper").show();
                $("#movies_wrapper").hide();
            });
        });

        var customerBalance = setCustomerBalance();

        function setCustomerBalance(value = @Model.Customer.Balance){
            return value;
        }

        @if (Model.Movies.Any() && !IsMoviesAreNotAvailable)
        {
            @:$(document).ready(function hideGamesTable() {
                @:$("#games").hide();
                @:$("#games_wrapper").hide();
            @:});
        }

        $(".table").on("click", ".js-rent-product", function () {
            var button = $(this);

            //Variables
            var depositAmount;
            if (button.attr("data-product-type") == "Movie")
                 depositAmount = button.attr("data-movie-price");
            else if (button.attr("data-product-type") == "Game")
                depositAmount = button.attr("data-game-price");
            var discountRate = button.attr("data-discount-rate");

            //Deposit ammount calculation
            if (discountRate != 0)
                depositAmount -= depositAmount * (discountRate / 100);
            depositAmount -= customerBalance;

            //Check if customer's balance suffice to rent product
            if (customerBalance >= depositAmount) {
                //Rent movie
                if (button.attr("data-product-type") == "Movie") {
                    bootbox.confirm("Are you sure you want to rent this movie?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/Rentals/Save/" + button.attr("data-customer-id") + "/" + button.attr("data-movie-id") + "/" + button.attr("data-product-type"),
                                dataType: 'json',
                                type: 'POST',
                                success: function (response) {
                                    if (response.result == 'Redirect')
                                        window.location = response.url;
                                }
                            });
                        }
                    });
                }
                //Rent game
                if (button.attr("data-product-type") == "Game") {
                    bootbox.confirm("Are you sure you want to rent this game?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/Rentals/Save/" + button.attr("data-customer-id") + "/" + button.attr("data-game-id") + "/" + button.attr("data-product-type"),
                                dataType: 'json',
                                type: 'POST',
                                success: function (response) {
                                    if (response.result == 'Redirect')
                                        window.location = response.url;
                                }
                            });
                        }
                    });
                }
            }
            else {
                toastr.error("Insufficient founds");
                //Top up customer's balance that suffice to rent product
                bootbox.confirm("Do you want to deposit " + depositAmount + "$ ?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/Customers/TopUpBalance/" + button.attr("data-customer-id") + "/" + depositAmount + "/",
                            dataType: 'json',
                            type: 'POST',
                            success: function (response) {
                                if (response.result == 'Success') {
                                    toastr.success("Founds have been successfully added");
                                    customerBalance = setCustomerBalance(response.balance);
                                }
                            }
                        });
                    }
                });
            }
        });
    </script>
}
